generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// =======================================
// User
// =======================================
model User {
  id        String  @id @default(cuid())
  username  String  @unique
  name      String
  image     String?
  bio       String?
  onboarded Boolean @default(false)

  threads            Thread[] // Треды, созданные пользователем
  communities        Community[] @relation("CommunityMembers") // Членство в сообществах
  createdCommunities Community[] @relation("CommunityCreator") // Сообщества, которые создал пользователь
  createdAt          DateTime    @default(now())
  updatedAt          DateTime    @updatedAt
}

// =======================================
// Community
// =======================================
model Community {
  id       String  @id @default(cuid())
  username String  @unique
  name     String
  image    String?
  bio      String?

  createdBy   User?   @relation("CommunityCreator", fields: [createdById], references: [id])
  createdById String?

  threads   Thread[] // Треды сообщества
  members   User[]   @relation("CommunityMembers") // Участники сообщества
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// =======================================
// Thread
// =======================================
model Thread {
  id        String   @id @default(cuid())
  text      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  author   User   @relation(fields: [authorId], references: [id])
  authorId String

  community   Community? @relation(fields: [communityId], references: [id])
  communityId String?

  parent   Thread? @relation("ThreadChildren", fields: [parentId], references: [id])
  parentId String?

  children  Thread[] @relation("ThreadChildren")
}
